#!/usr/bin/env bash

only_windows() {
    local windowid rest
    while read -r windowid rest; do
        case "$(get_window_types "$windowid")" in \
            *_NET_WM_WINDOW_TYPE_DESKTOP* |       \
            *_NET_WM_WINDOW_TYPE_DOCK* |          \
            *_NET_WM_WINDOW_TYPE_TOOLBAR* |       \
            *_NET_WM_WINDOW_TYPE_MENU* |          \
            *_NET_WM_WINDOW_TYPE_UTILITY* |       \
            *_NET_WM_WINDOW_TYPE_SPLASH* |        \
            *_NET_WM_WINDOW_TYPE_DROPDOWN_MENU* | \
            *_NET_WM_WINDOW_TYPE_POPUP_MENU* |    \
            *_NET_WM_WINDOW_TYPE_TOOLTIP* |       \
            *_NET_WM_WINDOW_TYPE_NOTIFICATION* |  \
            *_NET_WM_WINDOW_TYPE_COMBO* |         \
            *_NET_WM_WINDOW_TYPE_DND*)
                ;;
            *)
                printf '%s\n' "$windowid $rest"
                ;;
        esac
    done
}

get_window_types() {
    local name window_types
    read -r name window_types < <(xprop -id "$1" ' $0+\n' _NET_WM_WINDOW_TYPE)
    if [[ "$window_types" != 'not found.' ]]; then
        printf '%s\n' "$window_types"
    fi
}

print_windows() {
    local windowid hostname pid workspace class title
    tmpfile=$(mktemp)
    exec 3>"$tmpfile"
    exec 4<"$tmpfile"
    while read -r windowid hostname pid workspace class title; do
        echo "$hostname,$pid,$class,$(tr -d '\0' </proc/"$pid"/comm),$(readlink /proc/"$pid"/exe),$(tr -d '\0' </proc/"$pid"/cmdline)" >&3
    done
    column -t -s, -N HOST,PID,WM_CLASS,COMMAND,LINK,COMMAND_LINE <&4
}

list_windows() {
    local windowid workspace pid wm_class hostname title
    while read -r windowid workspace pid wm_class hostname title; do
        printf '%s\n' "$windowid $hostname $pid $workspace ${wm_class##*.} $title"
    done < <(wmctrl -lpx)
}

list_windows | only_windows | print_windows
